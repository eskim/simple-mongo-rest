// Generated by CoffeeScript 1.8.0
(function() {
  var ObjectID, _;

  _ = require('lodash');

  ObjectID = require('mongodb').ObjectID;

  module.exports = function(app, db, options) {
    var getQuery, prefix, queryCursor;
    if (options == null) {
      options = {};
    }
    prefix = options.prefix || "/api";
    console.log('simple-mongo-rest mounted : ', prefix);
    if (options.before_hook != null) {
      app.all("" + prefix + "/*", options.before_hook);
    }
    getQuery = function(req) {
      var query;
      if (req.query.query != null) {
        query = JSON.parse(req.query.query);
      } else {
        query = {};
      }
      if (query._id != null) {
        query._id = new ObjectID(query._id);
      }
      return query;
    };
    queryCursor = function(req) {
      var coll, cursor, query;
      query = getQuery(req);
      coll = db.collection(req.params.collection);
      cursor = coll.find(query);
      if (req.query.sort != null) {
        cursor.sort(JSON.parse(req.query.sort));
      }
      if (req.query.limit != null) {
        cursor.limit(parseInt(req.query.limit));
      }
      if (req.query.skip != null) {
        cursor.skip(parseInt(req.query.skip));
      }
      return cursor;
    };
    app.get("" + prefix + "/:collection/count", function(req, res, next) {
      var cursor;
      cursor = queryCursor(req);
      return cursor.count(function(e, result) {
        if (e != null) {
          next(e);
        }
        return res.send({
          count: result
        });
      });
    });
    app.get("" + prefix + "/:collection/:id", function(req, res, next) {
      var coll, query;
      query = {
        _id: new ObjectID(req.params.id)
      };
      coll = db.collection(req.params.collection);
      return coll.findOne(query, function(e, doc) {
        if (e != null) {
          next(e);
        }
        return res.send(doc);
      });
    });
    app.get("" + prefix + "/:collection", function(req, res, next) {
      var cursor;
      cursor = queryCursor(req);
      return cursor.toArray(function(e, doc) {
        if (e != null) {
          next(e);
        }
        return res.send(doc);
      });
    });
    app.post("" + prefix + "/:collection", function(req, res, next) {
      var coll;
      coll = db.collection(req.params.collection);
      return coll.insert(req.body, function(e, docs) {
        if (e != null) {
          next(e);
        }
        return res.send(docs);
      });
    });
    app["delete"]("" + prefix + "/:collection", function(req, res, next) {
      var coll, query;
      query = getQuery(req);
      coll = db.collection(req.params.collection);
      return coll.remove(query, function(e, doc) {
        if (e != null) {
          next(e);
        }
        return res.send({
          affected: doc
        });
      });
    });
    return app.put("" + prefix + "/:collection/:id", function(req, res, next) {
      var coll;
      coll = db.collection(req.params.collection);
      return coll.update({
        _id: new ObjectID(req.params.id)
      }, req.body, function(e, affected, result) {
        if (e != null) {
          next(e);
        }
        return res.send(result);
      });
    });
  };

}).call(this);
